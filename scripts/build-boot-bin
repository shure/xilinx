#!/bin/sh

script=$(readlink -f $0)
script_dir=`dirname $script`

hdf_file=$1
if [ "$hdf_file" = "" ]; then
    echo "Please specify HDF file."
    exit 1
fi

hdf_file=$(readlink -f $hdf_file)
hdf_file_name=$(basename $hdf_file)
hdf_file_dir=`dirname $hdf_file`

mkdir -p components
cd components

components=$PWD

# copy and unzip hardware
rm -rf hardware
mkdir hardware
cp $hdf_file hardware
(cd hardware; unzip $hdf_file_name)
cp $script_dir/dts/system-top.dts hardware
cp $script_dir/dts/pcw.dtsi hardware

# prepare dummy configuration suitable for this hw desc
rm -rf config
cp -rf $PETALINUX/components/misc/config .
(cd config; $PETALINUX/tools/hsm/bin/xsct $PETALINUX/components/misc/config/hw-description/hw-description.tcl plnx_gen_hwsysconf ../hardware/$hdf_file_name Kconfig.syshw; $PETALINUX/tools/linux-i386/petalinux/bin/unexport/conf --alldefconfig Kconfig.part)

if [ ! -d device-tree-xlnx/.git ]; then
	git clone --depth 1 -b xilinx-v${PETALINUX_VER} https://github.com/Xilinx/device-tree-xlnx.git
fi
$PETALINUX/tools/hsm/bin/xsct $script_dir/generate-device-tree.tcl $components/hardware/$hdf_file_name $components/device-tree-xlnx $components/hardware
fsbl_board=`cat $components/hardware/fsbl_board`
design_name=`cat $components/hardware/design_name`

#echo "^"
#echo "^"
#read -p "Change the device tree if necessary, and press any key..."

$PETALINUX/tools/hsm/bin/xsct \
	$PETALINUX/etc/hsm/scripts/petalinux_hsm_bridge.tcl \
	-c config/.config \
	-hdf hardware/$hdf_file_name \
	-repo device-tree-xlnx \
	-data $PETALINUX/etc/hsm/data/ \
	-sw hardware \
	-o hardware \
	-a soc_mapping

dtc -I dts -O dtb -o $components/hardware/system.dtb $components/hardware/system-top.dts

if [ ! -d embeddedsw/.git ]; then
    git clone --depth 1 https://github.com/shure/embeddedsw.git
fi

make -C embeddedsw/lib/sw_apps/zynqmp_fsbl/src BOARD=$fsbl_board PROC=a53 A53_STATE=64 PSU_INIT_DIR=$components/hardware all

if [ ! -d u-boot-xlnx/.git ]; then
    git clone --depth 1 -b xilinx-v${PETALINUX_VER} https://github.com/Xilinx/u-boot-xlnx.git
fi
(export ARCH=arm64; export CROSS_COMPILE=aarch64-none-elf-; cd u-boot-xlnx; make xilinx_zynqmp_zcu102_defconfig; make -j 4)

if [ ! -d arm-trusted-firmware/.git ]; then
    git clone --depth 1 -b xilinx-v${PETALINUX_VER}  https://github.com/Xilinx/arm-trusted-firmware.git
fi
(export ARCH=arm64; export CROSS_COMPILE=aarch64-none-elf-; cd arm-trusted-firmware; make PLAT=zynqmp)

fsbl_elf=$components/embeddedsw/lib/sw_apps/zynqmp_fsbl/src/fsbl.elf
atf_elf=$components/arm-trusted-firmware/build/zynqmp/release/bl31/bl31.elf
u_boot_elf=$components/u-boot-xlnx/u-boot.elf
bit_stream=$components/hardware/$design_name.bit

# Create dummy project
if [ ! -f dummy_project/config.project ]; then
    petalinux-create -t project --template zynqMP -n dummy_project
fi

(cd $components/dummy_project; petalinux-package --force --boot --atf $atf_elf --pmufw no --fsbl $fsbl_elf --fpga $bit_stream --u-boot $u_boot_elf)

cd ../

mkdir -p images
cp components/dummy_project/images/linux/BOOT.BIN images/
cp components/hardware/system.dtb images/
dtc -I dtb -O dts -o images/system.dts $components/hardware/system.dtb
cp $script_dir/uEnv.txt images/
